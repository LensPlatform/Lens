version: "2"
services:
  traefik:
    image: traefik:v2.0.0-rc3
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  storage:
    image: openzipkin/zipkin-mysql
    container_name: mysql
    # Uncomment to expose the storage port for testing
    # ports:
    #   - 3306:3306

    # The zipkin process services the UI, and also exposes a POST endpoint that
    # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    # zipkin configuration https://github.com/openzipkin-attic/docker-zipkin
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      # Uncomment to enable scribe
      # - SCRIBE_ENABLED=true
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
      # Uncomment if you set SCRIBE_ENABLED=true
      # - 9410:9410
    depends_on:
      - storage
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      - storage
    volumes:
      - ./prometheus.yml:/etc/prometheus.yml
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  setup_grafana_datasource:
    image: appropriate/curl
    container_name: setup_grafana_datasource
    depends_on:
      - grafana
    volumes:
      - ./create-datasource-and-dashboard.sh:/create.sh:ro
    command: /create.sh
    # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to see dependency processing logs
      # - ZIPKIN_LOG_LEVEL=DEBUG
      # Uncomment to adjust memory used by the dependencies job
      # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
      - storage

  users-microservice-v1:
    build:
      context: src
      dockerfile: ./Dockerfile
    container_name: users_microservice
    ports:
      - 8805:8085
      - 8804:8084
      - 8081:8081
    restart: always
    networks:
      - app-tier
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-microservice-v1.rule=Host(`users-microservice-v1.localhost`)"
      - "traefik.http.routers.users-microservice-v1.entrypoints=web"
    depends_on:
      - stats
      - queue-ram1
      - queue-disc1
    volumes:
      - '.:/go/src/github.com/LensPlatform/Lens'
  stats:
    image: bitnami/rabbitmq:3.7
    environment:
      - RABBITMQ_NODE_TYPE=stats
      - RABBITMQ_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=bitnami
    networks:
      - app-tier
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - 'rabbitmqstats_data:/bitnami'
  queue-disc1:
      image: bitnami/rabbitmq:3.7
      environment:
        - RABBITMQ_NODE_TYPE=queue-disc
        - RABBITMQ_NODE_NAME=rabbit@queue-disc1
        - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
        - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=bitnami
      networks:
        - app-tier
      volumes:
        - 'rabbitmqdisc1_data:/bitnami'
  queue-ram1:
      image: bitnami/rabbitmq:3.7
      environment:
        - RABBITMQ_NODE_TYPE=queue-ram
        - RABBITMQ_NODE_NAME=rabbit@queue-ram1
        - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
        - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
        - RABBITMQ_DEFAULT_USER=user
        - RABBITMQ_DEFAULT_PASS=bitnami
      networks:
        - app-tier
      volumes:
        - 'rabbitmqram1_data:/bitnami'

volumes:
  rabbitmqstats_data:
    driver: local
  rabbitmqdisc1_data:
    driver: local
  rabbitmqram1_data:
    driver: local

networks:
  app-tier:
    driver: bridge