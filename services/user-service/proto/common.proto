syntax = "proto3";
import "github.com/infobloxopen/protoc-gen-gorm/options/gorm.proto";
option go_package = "/proto;user";

enum AccountType  {
    RegularUser = 0;
    Startup = 1;
    Investor = 2;
}

enum TeamAccountType {
    StartupTeam = 0;
    InvestorTeam = 1;
}

message Address {
    option (gorm.opts).ormable = true;
    int32 id = 1 [(gorm.field).tag = {type: "integer" primary_key: true}];
    int32 Longitude = 2;
    int32 Latitude = 3;
    string City = 4;
    string State = 5;
    string Country = 6;
    string ZipCode = 7;
    string Street = 8;
    string BuildingNumber = 9;
}

message Education
{
    option (gorm.opts).ormable = true;
    int32 id = 1 [(gorm.field).tag = {type: "integer" primary_key: true}];
    string InstitutionName = 2;
    string DegreeEarned  = 3;
    bool Graduated = 4;
    string Major = 5;
    string Minor  = 6;
    string Start = 7;
    string End = 8;
}

message Interests {
    option (gorm.opts).ormable = true;
    int32 id = 1 [(gorm.field).tag = {type: "integer" primary_key: true}];
    // topics is a json string of the following type
    // [{topic : {topic_type : "Technology", topic_name: "Machine Learning"}}]
    repeated Topic topics = 2;
    // industry is a json string of the following type
    // [{industry : {industry_name : "Technology"}}]
    repeated Industry industry = 3; // industry is a string comprised of comma separated values
}

message Topic
{
    string TopicName = 1;
    string TopicType = 2;
}

message Industry {
    string IndustryName = 1;
}

message Subscriptions{
    option (gorm.opts).ormable = true;
    int32 id = 1 [(gorm.field).tag = {type: "integer" primary_key: true}];
    string SubscriptionName = 2;
    bool SubscriptionStatus = 3;
    string SubscriptionStartDate = 4;
    string SubscriptionEndDate = 5;
    // Subscriptions access type witholds the access type
    // which is either Unlimited or Limited Access
    string SubscriptionAccessType = 6;
    bool IsSubscriptionActive = 7;
    string CreatedAt  = 8;
    string UpdatedtAt = 9;
}

message SkillSet{
    repeated Skill Skills = 1;
}

message Skill {
    string Type = 1;
    string Name = 2;
}

message Contact {
    string Email = 1;
    string PhoneNumber = 2;
}

message SocialMedia {
    uint32 Github = 1;
    string Website = 2;
    string Facebook = 3;
    string Twitter = 4;
    string LinkedIn = 5;
    string Instagram = 6;
    string Youtube = 7;
}

message Details {
    option (gorm.opts).ormable = true;
    string IPOStatus = 1;
    string CompanyType = 2;// for-profit
}

message Experience {
    option (gorm.opts).ormable = true;
    string CompanyName = 1;
    string StartDate = 2;
    string EndDate = 3;
    string Title = 4;
}

message Investment {
    option (gorm.opts).ormable = true;
    string CompanyName = 1;
    string Industry = 2;
}

message Settings {
    option (gorm.opts).ormable = true;
    int32 id = 1 [(gorm.field).tag = {type: "integer" primary_key: true}];
    Notification Notifications  = 2;
    Privacy Privacy = 3;
    Payments Payment = 4;
    repeated LoginActivity activity = 20;
}

message LoginActivity {
    option (gorm.opts).ormable = true;
    int32 id = 1 [(gorm.field).tag = {type: "integer" primary_key: true}];
    Address location = 2;
    string date = 3;
}

message Payments  {
    Card Debit = 1;
    Card Credit = 2;
    Pin SecurityPin = 3;
}

message Card {
    option (gorm.opts).ormable = true;
    string CardNumber = 1;
    string SecurityCode = 2;
    string CardZipCode  = 3;
    string FullName = 4;
    string Address = 5;
    string City = 6;
    string State = 7;
    string ZipCode = 8;
}

message Pin {
    bool PinEnabled = 1;
    string Pin = 2;
}

message Privacy {
    bool ActivityStatus  = 1;
    bool PrivateAccount  = 2;
    repeated string BlockedAccountIds = 3;
    repeated string MutedAccountIds = 4;
}

message Notification {
    option (gorm.opts).ormable = true;
    uint32 id = 1;
    bool PauseAll = 2;
    PostAndCommentsPushNotificationSettings PostsAndComments  = 3;
    FollowingAndFollowersPushNotificationSettings FollowingAndFollowers = 4;
    DirectMessagesPushNotificationSettings DirectMessages  = 5;
    EmailAndSmsPushNotificationSettings EmailAndSms = 6;
}

message PostAndCommentsPushNotificationSettings {
    TieredPushNotificationSetting Likes  = 1; // yoan liked your photo
    TieredPushNotificationSetting LikesAndCommentsOnPostsOfYou = 2; // yoan commented on a post you're tagged in
    TieredPushNotificationSetting PostsOfYou = 3; // yoan tagged you in a photo
    TieredPushNotificationSetting Comments = 4; // yoan commented nice pic
    TieredPushNotificationSetting CommentLikes = 5; // yoan liked your comment "nice shot"
}

message FollowingAndFollowersPushNotificationSettings {
    PushNotificationSetting FollowerRequests = 1;  // yoan has requested to follow you
    PushNotificationSetting AcceptedFollowerRequests = 2;  // yoan accepted your follow request
    TieredPushNotificationSetting MentionsInBio = 3; // yoan mentioned you in his bio
}

message DirectMessagesPushNotificationSettings {
    PushNotificationSetting MessageRequests = 1; // yoan wants to send you message
    PushNotificationSetting Message  = 2;// yoan has sent you a message
    PushNotificationSetting GroupRequests = 3; // yoan wants to add willy to your group
}

message EmailAndSmsPushNotificationSettings {
    PushNotificationSetting FeedbackEmail = 1;
    PushNotificationSetting ReminderEmails = 2;
    PushNotificationSetting ProductEmails  = 3;
    PushNotificationSetting NewsEmails   = 4;
}

message TieredPushNotificationSetting {
    bool Off = 1;
    bool FromPeopleIFollow = 2;
    bool FromEveryone = 3;
}

message PushNotificationSetting {
    bool Off = 1;
    bool On = 2;
}
